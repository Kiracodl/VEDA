%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.71.0 (http://poppler.freedesktop.org)
%%Creator: MATLAB, The Mathworks, Inc. Version 7.8.0.347 (R2009a). Operating System: Linux 2.6.32-5-amd64 #1 SMP Mon Mar 7 21:35:22 UTC 2011 x86_64.
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 288 216
%%HiResBoundingBox: 0 0 288 216
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
/F8_0 /Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /quoteleft/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/exclamdown/cent/sterling/fraction/yen/florin/section
  /currency/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright/fi/fl
  /.notdef/endash/dagger/daggerdbl/periodcentered/.notdef/paragraph/bullet
  /quotesinglbase/quotedblbase/quotedblright/guillemotright/ellipsis/perthousand/.notdef/questiondown
  /.notdef/grave/acute/circumflex/tilde/macron/breve/dotaccent
  /dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut/ogonek/caron
  /emdash/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/AE/.notdef/ordfeminine/.notdef/.notdef/.notdef/.notdef
  /Lslash/Oslash/OE/ordmasculine/.notdef/.notdef/.notdef/.notdef
  /.notdef/ae/.notdef/.notdef/.notdef/dotlessi/.notdef/.notdef
  /lslash/oslash/oe/germandbls/.notdef/.notdef/.notdef/.notdef]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 288 216 re
W
q
q
[0.1 0 0 0.1 0 0] cm
5 w
1 j
/DeviceGray {} CS
[1] SC
374.168 237.5 2232.502 1750.83 re
S
[5 40] 0 d
3.33333 w
/DeviceGray {} CS
[0] SC
513.332 237.5 m
513.332 1988.33 l
S
513.332 1988.33 m
513.332 1988.33 l
S
374.168 894.168 m
2606.67 894.168 l
S
2606.67 894.168 m
2606.67 894.168 l
S
[] 0 d
5 w
374.168 237.5 m
2606.67 237.5 l
S
374.168 1988.33 m
2606.67 1988.33 l
S
374.168 237.5 m
374.168 1988.33 l
S
2606.67 237.5 m
2606.67 1988.33 l
S
374.168 237.5 m
2606.67 237.5 l
S
374.168 237.5 m
374.168 1988.33 l
S
513.332 237.5 m
513.332 260 l
S
513.332 1988.33 m
513.332 1966.67 l
S
374.168 894.168 m
395.832 894.168 l
S
2606.67 894.168 m
2584.17 894.168 l
S
374.168 237.5 m
2606.67 237.5 l
S
374.168 1988.33 m
2606.67 1988.33 l
S
374.168 237.5 m
374.168 1988.33 l
S
2606.67 237.5 m
2606.67 1988.33 l
S
q
374.168 236.668 2233.332 1751.662 re
W
20 w
/DeviceRGB {} CS
[1 0 0] SC
720.832 429.168 m
718.332 417.5 l
716.668 405.832 l
714.168 395 l
712.5 385 l
710 375 l
708.332 366.668 l
705.832 358.332 l
703.332 350 l
701.668 343.332 l
699.168 336.668 l
697.5 330.832 l
695 325.832 l
693.332 321.668 l
690.832 318.332 l
689.168 315.832 l
686.668 313.332 l
685 312.5 l
682.5 311.668 l
680.832 312.5 l
678.332 313.332 l
676.668 315.832 l
674.168 318.332 l
672.5 322.5 l
670 327.5 l
668.332 332.5 l
665.832 339.168 l
664.168 345.832 l
661.668 354.168 l
660 362.5 l
657.5 372.5 l
655.832 383.332 l
653.332 394.168 l
651.668 406.668 l
649.168 420 l
647.5 433.332 l
645 448.332 l
643.332 464.168 l
640.832 480 l
639.168 496.668 l
636.668 515 l
635 533.332 l
632.5 552.5 l
630.832 572.5 l
628.332 593.332 l
626.668 614.168 l
624.168 636.668 l
622.5 659.168 l
620 681.668 l
618.332 705.832 l
615.832 730 l
613.332 755 l
611.668 780 l
609.168 805.832 l
607.5 831.668 l
605 858.332 l
603.332 885.832 l
600.832 912.5 l
599.168 940 l
596.668 968.332 l
595 995.832 l
592.5 1024.17 l
590.832 1052.5 l
588.332 1080.83 l
586.668 1110 l
584.168 1138.33 l
582.5 1166.67 l
580 1195 l
578.332 1224.17 l
575.832 1252.5 l
574.168 1280 l
571.668 1308.33 l
570 1335.83 l
567.5 1363.33 l
565.832 1390.83 l
563.332 1417.5 l
561.668 1443.33 l
559.168 1469.17 l
557.5 1495 l
555 1519.17 l
553.332 1543.33 l
550.832 1567.5 l
549.168 1590 l
546.668 1612.5 l
545 1634.17 l
542.5 1655 l
540.832 1674.17 l
538.332 1693.33 l
536.668 1711.67 l
534.168 1729.17 l
532.5 1745 l
530 1760 l
528.332 1775 l
525.832 1787.5 l
523.332 1800 l
521.668 1810.83 l
519.168 1820.83 l
517.5 1829.17 l
515 1836.67 l
513.332 1842.5 l
S
927.5 1053.33 m
925.832 1063.33 l
923.332 1073.33 l
921.668 1083.33 l
919.168 1093.33 l
917.5 1102.5 l
915 1112.5 l
913.332 1121.67 l
910.832 1130 l
909.168 1139.17 l
906.668 1147.5 l
905 1155.83 l
902.5 1164.17 l
900.832 1171.67 l
898.332 1179.17 l
896.668 1185.83 l
894.168 1193.33 l
892.5 1199.17 l
890 1205.83 l
888.332 1210.83 l
885.832 1216.67 l
883.332 1221.67 l
881.668 1225.83 l
879.168 1230 l
877.5 1234.17 l
875 1237.5 l
873.332 1240 l
870.832 1242.5 l
869.168 1245 l
866.668 1245.83 l
865 1247.5 l
858.332 1247.5 l
856.668 1246.67 l
854.168 1245 l
852.5 1243.33 l
850 1240.83 l
848.332 1237.5 l
845.832 1234.17 l
844.168 1230 l
841.668 1225.83 l
840 1220.83 l
837.5 1215 l
835.832 1209.17 l
833.332 1202.5 l
831.668 1195 l
829.168 1187.5 l
827.5 1180 l
825 1170.83 l
823.332 1161.67 l
820.832 1152.5 l
819.168 1142.5 l
816.668 1131.67 l
815 1120.83 l
812.5 1110 l
810.832 1097.5 l
808.332 1085.83 l
806.668 1073.33 l
804.168 1060 l
802.5 1046.67 l
800 1032.5 l
798.332 1018.33 l
795.832 1004.17 l
793.332 989.168 l
791.668 974.168 l
789.168 958.332 l
787.5 943.332 l
785 926.668 l
783.332 910.832 l
780.832 894.168 l
779.168 877.5 l
776.668 860.832 l
775 844.168 l
772.5 827.5 l
770.832 810 l
768.332 792.5 l
766.668 775.832 l
764.168 758.332 l
762.5 740.832 l
760 723.332 l
758.332 705.832 l
755.832 689.168 l
754.168 671.668 l
751.668 655 l
750 637.5 l
747.5 620.832 l
745.832 605 l
743.332 588.332 l
741.668 572.5 l
739.168 556.668 l
737.5 540.832 l
735 525.832 l
733.332 510.832 l
730.832 495.832 l
729.168 481.668 l
726.668 468.332 l
725 455 l
722.5 441.668 l
720.832 429.168 l
S
1135 884.168 m
1132.5 878.332 l
1130.83 871.668 l
1128.33 865.832 l
1126.67 859.168 l
1124.17 852.5 l
1122.5 846.668 l
1120 840 l
1118.33 833.332 l
1115.83 827.5 l
1114.17 820.832 l
1111.67 815 l
1110 808.332 l
1107.5 802.5 l
1105.83 795.832 l
1103.33 790 l
1101.67 784.168 l
1099.17 777.5 l
1097.5 771.668 l
1095 765.832 l
1093.33 760.832 l
1090.83 755 l
1089.17 750 l
1086.67 744.168 l
1085 739.168 l
1082.5 734.168 l
1080.83 729.168 l
1078.33 725 l
1076.67 720.832 l
1074.17 715.832 l
1072.5 712.5 l
1070 708.332 l
1068.33 705 l
1065.83 701.668 l
1063.33 698.332 l
1061.67 695 l
1059.17 692.5 l
1057.5 690 l
1055 687.5 l
1053.33 685.832 l
1050.83 684.168 l
1049.17 682.5 l
1046.67 681.668 l
1045 680.832 l
1042.5 680.832 l
1040.83 680 l
1038.33 680 l
1036.67 680.832 l
1034.17 681.668 l
1032.5 682.5 l
1030 683.332 l
1028.33 685 l
1025.83 686.668 l
1024.17 689.168 l
1021.67 691.668 l
1020 695 l
1017.5 697.5 l
1015.83 701.668 l
1013.33 705 l
1011.67 709.168 l
1009.17 713.332 l
1007.5 718.332 l
1005 723.332 l
1003.33 728.332 l
1000.83 734.168 l
999.168 740 l
996.668 745.832 l
995 752.5 l
992.5 759.168 l
990.832 766.668 l
988.332 773.332 l
986.668 780.832 l
984.168 789.168 l
982.5 796.668 l
980 805 l
978.332 813.332 l
975.832 822.5 l
973.332 830.832 l
971.668 840 l
969.168 849.168 l
967.5 858.332 l
965 868.332 l
963.332 878.332 l
960.832 887.5 l
959.168 897.5 l
956.668 907.5 l
955 918.332 l
952.5 928.332 l
950.832 938.332 l
948.332 949.168 l
946.668 960 l
944.168 970 l
942.5 980.832 l
940 990.832 l
938.332 1001.67 l
935.832 1012.5 l
934.168 1022.5 l
931.668 1033.33 l
930 1043.33 l
927.5 1053.33 l
S
1342.5 855 m
1340 857.5 l
1337.5 860.832 l
1335.83 863.332 l
1333.33 866.668 l
1331.67 870 l
1329.17 873.332 l
1327.5 876.668 l
1325 880 l
1323.33 883.332 l
1320.83 887.5 l
1319.17 890.832 l
1316.67 894.168 l
1315 898.332 l
1312.5 901.668 l
1310.83 905.832 l
1308.33 909.168 l
1306.67 913.332 l
1304.17 917.5 l
1302.5 920.832 l
1300 925 l
1298.33 929.168 l
1295.83 932.5 l
1294.17 936.668 l
1291.67 940 l
1290 944.168 l
1287.5 948.332 l
1285.83 951.668 l
1283.33 955.832 l
1281.67 959.168 l
1279.17 962.5 l
1277.5 966.668 l
1275 970 l
1273.33 973.332 l
1270.83 976.668 l
1269.17 980 l
1266.67 983.332 l
1265 986.668 l
1262.5 990 l
1260.83 992.5 l
1258.33 995.832 l
1256.67 998.332 l
1254.17 1000.83 l
1252.5 1003.33 l
1250 1005.83 l
1247.5 1008.33 l
1245.83 1010 l
1243.33 1012.5 l
1241.67 1014.17 l
1239.17 1015.83 l
1237.5 1017.5 l
1235 1019.17 l
1233.33 1020 l
1230.83 1021.67 l
1229.17 1022.5 l
1226.67 1023.33 l
1225 1023.33 l
1222.5 1024.17 l
1214.17 1024.17 l
1212.5 1023.33 l
1210 1023.33 l
1208.33 1022.5 l
1205.83 1020.83 l
1204.17 1020 l
1201.67 1018.33 l
1200 1016.67 l
1197.5 1015 l
1195.83 1013.33 l
1193.33 1010.83 l
1191.67 1008.33 l
1189.17 1005.83 l
1187.5 1003.33 l
1185 1000 l
1183.33 997.5 l
1180.83 994.168 l
1179.17 990.832 l
1176.67 986.668 l
1175 983.332 l
1172.5 979.168 l
1170.83 975 l
1168.33 970.832 l
1166.67 966.668 l
1164.17 961.668 l
1162.5 956.668 l
1160 951.668 l
1157.5 946.668 l
1155.83 941.668 l
1153.33 936.668 l
1151.67 930.832 l
1149.17 925.832 l
1147.5 920 l
1145 914.168 l
1143.33 908.332 l
1140.83 902.5 l
1139.17 896.668 l
1136.67 890.832 l
1135 884.168 l
S
1549.17 936.668 m
1547.5 935.832 l
1545 935 l
1543.33 934.168 l
1540.83 932.5 l
1539.17 931.668 l
1536.67 930 l
1535 929.168 l
1532.5 927.5 l
1530.83 925.832 l
1528.33 925 l
1526.67 923.332 l
1524.17 921.668 l
1522.5 920 l
1520 918.332 l
1517.5 916.668 l
1515.83 914.168 l
1513.33 912.5 l
1511.67 910.832 l
1509.17 908.332 l
1507.5 906.668 l
1505 904.168 l
1503.33 902.5 l
1500.83 900 l
1499.17 898.332 l
1496.67 895.832 l
1495 893.332 l
1492.5 891.668 l
1490.83 889.168 l
1488.33 886.668 l
1486.67 885 l
1484.17 882.5 l
1482.5 880 l
1480 877.5 l
1478.33 875 l
1475.83 872.5 l
1474.17 870.832 l
1471.67 868.332 l
1470 865.832 l
1467.5 863.332 l
1465.83 861.668 l
1463.33 859.168 l
1461.67 856.668 l
1459.17 854.168 l
1457.5 852.5 l
1455 850 l
1453.33 848.332 l
1450.83 845.832 l
1449.17 844.168 l
1446.67 841.668 l
1445 840 l
1442.5 838.332 l
1440.83 835.832 l
1438.33 834.168 l
1436.67 832.5 l
1434.17 830.832 l
1432.5 829.168 l
1430 827.5 l
1427.5 826.668 l
1425.83 825 l
1423.33 824.168 l
1421.67 822.5 l
1419.17 821.668 l
1417.5 820.832 l
1415 819.168 l
1413.33 818.332 l
1410.83 818.332 l
1409.17 817.5 l
1406.67 816.668 l
1405 816.668 l
1402.5 815.832 l
1392.5 815.832 l
1390 816.668 l
1388.33 816.668 l
1385.83 817.5 l
1384.17 818.332 l
1381.67 818.332 l
1380 820 l
1377.5 820.832 l
1375.83 821.668 l
1373.33 823.332 l
1371.67 824.168 l
1369.17 825.832 l
1367.5 827.5 l
1365 829.168 l
1363.33 830.832 l
1360.83 832.5 l
1359.17 835 l
1356.67 836.668 l
1355 839.168 l
1352.5 841.668 l
1350.83 844.168 l
1348.33 846.668 l
1346.67 849.168 l
1344.17 851.668 l
1342.5 855 l
S
1756.67 865.832 m
1741.67 865.832 l
1740 866.668 l
1737.5 866.668 l
1735.83 867.5 l
1733.33 867.5 l
1731.67 868.332 l
1729.17 868.332 l
1727.5 869.168 l
1725 870 l
1723.33 870 l
1720.83 870.832 l
1719.17 871.668 l
1716.67 872.5 l
1715 873.332 l
1712.5 874.168 l
1710.83 875 l
1708.33 875.832 l
1706.67 876.668 l
1704.17 877.5 l
1702.5 878.332 l
1700 879.168 l
1697.5 880.832 l
1695.83 881.668 l
1693.33 882.5 l
1691.67 884.168 l
1689.17 885 l
1687.5 886.668 l
1685 887.5 l
1683.33 889.168 l
1680.83 890 l
1679.17 891.668 l
1676.67 892.5 l
1675 894.168 l
1672.5 895 l
1670.83 896.668 l
1668.33 898.332 l
1666.67 899.168 l
1664.17 900.832 l
1662.5 902.5 l
1660 904.168 l
1658.33 905 l
1655.83 906.668 l
1654.17 908.332 l
1651.67 909.168 l
1650 910.832 l
1647.5 912.5 l
1645.83 913.332 l
1643.33 915 l
1641.67 916.668 l
1639.17 917.5 l
1637.5 919.168 l
1635 920.832 l
1633.33 921.668 l
1630.83 923.332 l
1629.17 924.168 l
1626.67 925.832 l
1625 926.668 l
1622.5 928.332 l
1620.83 929.168 l
1618.33 930 l
1616.67 931.668 l
1614.17 932.5 l
1612.5 933.332 l
1610 934.168 l
1607.5 935 l
1605.83 935.832 l
1603.33 936.668 l
1601.67 937.5 l
1599.17 938.332 l
1597.5 939.168 l
1595 939.168 l
1593.33 940 l
1590.83 940.832 l
1589.17 940.832 l
1586.67 941.668 l
1582.5 941.668 l
1580.83 942.5 l
1572.5 942.5 l
1570 941.668 l
1565.83 941.668 l
1564.17 940.832 l
1561.67 940.832 l
1560 940 l
1557.5 940 l
1555.83 939.168 l
1553.33 938.332 l
1551.67 937.5 l
1549.17 936.668 l
S
1963.33 910 m
1959.17 910 l
1957.5 910.832 l
1950.83 910.832 l
1949.17 911.668 l
1917.5 911.668 l
1915.83 910.832 l
1909.17 910.832 l
1907.5 910 l
1905 910 l
1903.33 909.168 l
1900.83 909.168 l
1899.17 908.332 l
1896.67 908.332 l
1895 907.5 l
1892.5 907.5 l
1890.83 906.668 l
1888.33 906.668 l
1886.67 905.832 l
1884.17 905 l
1881.67 905 l
1880 904.168 l
1877.5 903.332 l
1875.83 902.5 l
1873.33 901.668 l
1871.67 901.668 l
1869.17 900.832 l
1867.5 900 l
1865 899.168 l
1863.33 898.332 l
1860.83 897.5 l
1859.17 896.668 l
1856.67 895.832 l
1855 895 l
1852.5 894.168 l
1850.83 893.332 l
1848.33 892.5 l
1846.67 891.668 l
1844.17 890.832 l
1842.5 890 l
1840 889.168 l
1838.33 888.332 l
1835.83 887.5 l
1834.17 886.668 l
1831.67 885.832 l
1830 885 l
1827.5 884.168 l
1825.83 883.332 l
1823.33 882.5 l
1821.67 881.668 l
1819.17 880.832 l
1817.5 880 l
1815 879.168 l
1813.33 878.332 l
1810.83 877.5 l
1809.17 876.668 l
1806.67 875.832 l
1805 875 l
1802.5 875 l
1800.83 874.168 l
1798.33 873.332 l
1796.67 872.5 l
1794.17 871.668 l
1792.5 871.668 l
1790 870.832 l
1787.5 870 l
1785.83 870 l
1783.33 869.168 l
1781.67 868.332 l
1779.17 868.332 l
1777.5 867.5 l
1775 867.5 l
1773.33 866.668 l
1769.17 866.668 l
1766.67 865.832 l
1756.67 865.832 l
S
2170.83 888.332 m
2166.67 888.332 l
2165 887.5 l
2160.83 887.5 l
2158.33 886.668 l
2151.67 886.668 l
2150 885.832 l
2145.83 885.832 l
2143.33 885 l
2135 885 l
2133.33 884.168 l
2091.67 884.168 l
2089.17 885 l
2083.33 885 l
2080.83 885.832 l
2075 885.832 l
2072.5 886.668 l
2070.83 886.668 l
2068.33 887.5 l
2064.17 887.5 l
2061.67 888.332 l
2060 888.332 l
2057.5 889.168 l
2055.83 889.168 l
2053.33 890 l
2051.67 890 l
2049.17 890.832 l
2047.5 890.832 l
2045 891.668 l
2043.33 891.668 l
2040.83 892.5 l
2039.17 892.5 l
2036.67 893.332 l
2035 893.332 l
2032.5 894.168 l
2030.83 895 l
2028.33 895 l
2026.67 895.832 l
2024.17 895.832 l
2022.5 896.668 l
2020 897.5 l
2018.33 897.5 l
2015.83 898.332 l
2014.17 899.168 l
2011.67 899.168 l
2010 900 l
2007.5 900 l
2005.83 900.832 l
2003.33 901.668 l
2001.67 901.668 l
1999.17 902.5 l
1997.5 902.5 l
1995 903.332 l
1993.33 904.168 l
1990.83 904.168 l
1989.17 905 l
1986.67 905 l
1985 905.832 l
1982.5 905.832 l
1980.83 906.668 l
1978.33 906.668 l
1976.67 907.5 l
1974.17 907.5 l
1971.67 908.332 l
1970 908.332 l
1967.5 909.168 l
1965.83 909.168 l
1963.33 910 l
S
2378.33 895.832 m
2370 895.832 l
2367.5 896.668 l
2361.67 896.668 l
2359.17 897.5 l
2350.83 897.5 l
2349.17 898.332 l
2340.83 898.332 l
2338.33 899.168 l
2330 899.168 l
2327.5 900 l
2315 900 l
2313.33 900.832 l
2269.17 900.832 l
2267.5 900 l
2255 900 l
2252.5 899.168 l
2246.67 899.168 l
2244.17 898.332 l
2237.5 898.332 l
2235.83 897.5 l
2229.17 897.5 l
2227.5 896.668 l
2223.33 896.668 l
2220.83 895.832 l
2216.67 895.832 l
2215 895 l
2212.5 895 l
2210.83 894.168 l
2206.67 894.168 l
2204.17 893.332 l
2200 893.332 l
2198.33 892.5 l
2194.17 892.5 l
2191.67 891.668 l
2190 891.668 l
2187.5 890.832 l
2183.33 890.832 l
2181.67 890 l
2179.17 890 l
2177.5 889.168 l
2173.33 889.168 l
2170.83 888.332 l
S
2585 895 m
2570.83 895 l
2568.33 894.168 l
2554.17 894.168 l
2551.67 893.332 l
2539.17 893.332 l
2537.5 892.5 l
2525 892.5 l
2522.5 891.668 l
2505.83 891.668 l
2503.33 890.832 l
2436.67 890.832 l
2435 891.668 l
2421.67 891.668 l
2420 892.5 l
2409.17 892.5 l
2407.5 893.332 l
2399.17 893.332 l
2396.67 894.168 l
2388.33 894.168 l
2386.67 895 l
2380 895 l
2378.33 895.832 l
S
2604.17 895.832 m
2587.5 895.832 l
2585 895 l
S
Q
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 139.5 9] Tm
0 0 Td
/F8_0 10 Tf
(Gap)
[7.78
0
5.56
0
5.56
0] Tj
[0 1 -1 0 27.6668 98.5832] Tm
0 0 Td
/F8_0 10 Tf
(Force)
[6.11
0
5.56
0
3.33
0
5
0
5.56
0] Tj
[1 0 0 1 125.5 206.75] Tm
0 0 Td
/F8_0 10 Tf
(Oscillatory)
[7.78
0
5
0
5
0
2.22
0
2.22
0
2.22
0
5.56
0
2.78
0
5.56
0
3.33
0
5
0] Tj
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF
